This directory is the run directory template in the GEOS-Chem unit tester
for the standard simulation using High Performance GEOS-Chem (GCHP). 

Set up, compile, and run GCHP by doing the following:

1. Execute bash script initialSetup.sh
   This creates symbolic links to source code and data referenced in 
   config file ExtData.rc. Settings in ExtData.rc are for use of input
   2x2.5 GEOS-FP meteorogoly fields by default. You can use other input
   met resolutions by simply updating the met paths and filenames in 
   ExtData.rc.

2. Set up your environment
   Use files ending in '.bashrc' as a template for environment setup. Set up
   your environment prior to compiling. Make sure your bashrc is sourced
   within the run script if using to submit your run.

3. Compile source code
   This creates a 'geos' executable using the Makefile which itself invokes 
   bash script build.sh. Compile by using the Makefile as follows:
   1. First compile: 'make compile_clean'
   2. Subsequent compiles, any of the following:
        'make compile_standard' : skips recompiling MAPL, ESMF, and DyCore
        'make compile_debug'    : same as above but with debug compile flags on
        'make compile_mapl'     : also recompiles MAPL
   Note that a clean compile will take over a half-hour while subsequent
   compilations will be of time on par with GEOS-Chem classic compile time.

4. Set run settings in bash script runConfig.sh 
   Set common settings here to avoid updating the same settings across 
   multiple config files (*.rc and input.geos). Settings include internal
   grid resolution, compute resources, and start/end/duration, to name a few.
   When runConfig.sh is executed, settings in the following config files 
   will be over-written:
   1. CAP.rc           : simulation start/end/duration; heartbeat; debug level
   2. fvcore_layout.rc : grid res; transport dt
   3. GCHP.rc          : compute resources; grid res; all dt; transport on/off 
   4. HISTORY.rc       : output frequency, duration, and mode; cores per node
   5. input.geos*      : most settings
   *NOTE 1: start time, end time, restart filename, and diagnostics are all 
    ignored in input.geos when using GCHP.
   *NOTE 2: runConfig.sh is automatically sourced in the sample run scripts.
    This means if you use one of them then you MUST make updates in runConfig.sh
    rather than in the individual config files.

5. Submit a run
   Sample run scripts for submitting jobs to a SLURM or Grid Engine scheduling
   system are included as examples for running the geos executable. Note that
   all sample run scripts include sourcing a bashrc and executing runConfig.sh 
   prior to the simulation. 

6. Inspect output data
   Output data are stored in the 'OutputDir' directory. The output restart 
   filename is set in GCHP.rc next to GIGCchem_INTERNAL_CHECKPOINT_TYPE and 
   must have '-' at the start. It is set up by default as 
   '-gcchem_internal_checkpoint_c24.nc'. 

7. Clean run directory prior to rerunning
   Do 'make cleanup_output' to clean the run directory (includes data
   deletion) prior to doing a new run. Alternatively, to rerun without 
   deleting your data, delete only file cap_restart. Failing to do this
   results a segmentation fault if your configured run duration fits 
   only once between your configured start and end datetimes.

8. OPTIONAL: do multiple consecutive runs of the same duration
   To automatically do multiple consecutive runs of the same duration, set
   the START and END fields in CAP.rc (or runConfig.sh to auto set them) to
   the overall start and end. Set duration to the duration of each of the
   individual runs. 

For more information, see the GEOS-Chem High Performance wiki page at
http://wiki.seas.harvard.edu/geos-chem/index.php/GEOS-Chem_HP
or contact the GEOS-Chem Support Team.

16 August 2017
GEOS-Chem Support Team
geos-chem-support@as.harvard.edu